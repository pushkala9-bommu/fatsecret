import{i as p,c as l,p as d,M as S,d as t,e as v,S as c,a as W,f as N}from"./install-service-worker-BSLz34R-.js";const a=()=>{d({type:S.ENVIRONMENT_ERROR,error:{name:"ServiceWorker",message:"Unexpected disconnect"},runId:null})},g=()=>{var e;(e=navigator.serviceWorker.controller)==null||e.postMessage({type:t.INIT})},y=()=>{let e=null;const r=()=>{if(!navigator.serviceWorker.controller){a();return}const n=new MessageChannel,s=setTimeout(()=>{e!=null&&window.clearInterval(e),navigator.serviceWorker.getRegistration().then(o=>{o==null||o.unregister(),a()})},4e3);n.port1.onmessage=o=>{o.data.type===l.PONG&&(clearTimeout(s),o.data.isSessionConnected||g())},navigator.serviceWorker.controller.postMessage({type:t.PING},[n.port2])};return e=window.setInterval(r,5e3),()=>window.clearInterval(e)},I=async(e,r)=>{const n=new MessageChannel;d({type:v.SW_RECONNECT,sessionId:c,clientId:e,reconnectId:r},[n.port1]);const s=W(o=>{var i;o.type===N.SW_RECONNECT_RESPONSE&&o.reconnectId===r&&o.sessionId===c&&((i=navigator.serviceWorker.controller)==null||i.postMessage({...o,type:t.SW_RECONNECT_RESPONSE},[n.port2]),s())})};p({routeName:"relay",onComplete:()=>{const e=y();navigator.serviceWorker.onmessage=r=>{r.data.type===l.SW_RECONNECT&&I(r.data.clientId,r.data.reconnectId)},navigator.serviceWorker.oncontrollerchange=r=>{(!(r.target instanceof ServiceWorkerContainer)||r.target.controller==null)&&(a(),e())},g()},onError:e=>{}});
